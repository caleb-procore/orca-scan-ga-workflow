# on a PR of "develop" <== "feature", do a docker image build and orca scan

name: Build and Scan Docker Image

on:
  workflow_call:
    inputs:
      aws-account-id:
        required: true
        type: string
      app-directory:
        required: true
        type: string
      dockerfile-path:
        required: true
        type: string
      oidc-role-arn:
        required: true
        type: string
      app-name:
        required: true
        type: string
      service-name:
        required: true
        type: string
      env:
        required: true
        type: string
      action-type:
        required: true
        type: string

jobs:
  build-scan:
    name: Build and Scan Docker Image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Assume OIDC Role
        id: assume-role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.oidc-role-arn }}
          role-session-name: github-action
          aws-region: us-west-2

      - name: Set Docker Build Image Tag
        id: image-tag
        run: |
          IMAGE_TAG=${GITHUB_SHA}
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Docker build
        id: build-image
        env:
          ECR_REGISTRY: ${{ inputs.aws-account-id }}.dkr.ecr.us-west-2.amazonaws.com
          ECR_REPO: ${{ inputs.app-name }}
          IMAGE_TAG: ${{ github.sha }}
          DOCKER_BUILDKIT: 1
        run: |
          echo "ECR Registry: $ECR_REGISTRY"
          echo "ECR Repository: $ECR_REPO"
          echo "Image Tag: $IMAGE_TAG"
          if [ "${{ inputs.action-type }}" == "build_scan_only" ]; then
            echo "Simulating merge process..."
            git fetch origin $GITHUB_BASE_REF
            git merge --no-commit --no-ff origin/$GITHUB_BASE_REF
          else
            echo "Performing real merge..."
          fi
          cd ${{ inputs.app-directory }}
          docker build . -t $ECR_REPO:$IMAGE_TAG -f ${{ inputs.dockerfile-path }}

      - name: Orca Image Scan
        id: scan
        uses: orcasecurity/orca-action@v1
        with:
          api-key: ${{ secrets.ORCA_API_TOKEN }}
          image: ${{ inputs.app-name }}:${{ github.sha }}
